--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v86=0;while true do if (v86==0) then v19=v0(v3(v30,1,1));return "";end end else local v87=v2(v0(v30,16));if v19 then local v112=v5(v87,v19);v19=nil;return v112;else return v87;end end end);local function v20(v31,v32,v33) if v33 then local v88=0 -0 ;local v89;while true do if (v88==((0 -0) -0)) then v89=(v31/((3 -1)^(v32-(2 -1))))%(2^(((v33-(620 -(555 + 64))) -(v32-(932 -((1922 -(68 + 997)) + 74)))) + (569 -(367 + 201)))) ;return v89-(v89%(928 -(214 + 713))) ;end end else local v90=0 + 0 ;local v91;while true do if (v90==(0 + (1270 -(226 + 1044)))) then v91=(879 -((1227 -945) + 595))^(v32-((1755 -(32 + 85)) -(1523 + 114))) ;return (((v31%(v91 + v91))>=v91) and (1 + 0)) or 0 ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=(0 + 0) -(0 -0) ;local v36;local v37;while true do if (v35==(1 -0)) then return (v37 * (185 + 66 + 5)) + v36 ;end if (v35==(0 + 0)) then v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (352 -((345 -258) + 263)) ;v35=958 -(892 + 65) ;end end end local function v23() local v38=952 -(802 + 150) ;local v39;local v40;local v41;local v42;while true do if (v38==(2 -(1 -0))) then return (v42 * 16777216) + (v41 * ((120066 -(1069 + 118)) -53343)) + (v40 * (580 -324)) + v39 ;end if (v38==(0 + 0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (1000 -(915 + 82)) );v18=v18 + (11 -7) ;v38=1 + 0 ;end end end local function v24() local v43=v23();local v44=v23();local v45=1 -0 ;local v46=(v20(v44,773 -(201 + 571) ,1158 -(116 + 1022) ) * ((1 + 1)^(56 -24))) + v43 ;local v47=v20(v44,21 + 0 ,822 -(368 + (1163 -740)) );local v48=((v20(v44,100 -68 )==((74 -55) -(10 + 8))) and  -(3 -2)) or (1 + 0) ;if (v47==(442 -(416 + 26))) then if (v46==(0 -0)) then return v48 * (1080 -(1020 + 60)) ;else local v113=0 -0 ;while true do if (v113==(0 -0)) then v47=4 -3 ;v45=0 + 0 ;break;end end end elseif (v47==(3621 -1574)) then return ((v46==0) and (v48 * ((1748 -(7 + 753 + 987))/(438 -(145 + 293))))) or (v48 * NaN) ;end return v8(v48,v47-(1453 -(35 + 9 + 386)) ) * (v45 + (v46/((1488 -(998 + 488))^((1072 -(87 + 968)) + (154 -119))))) ;end local function v25(v49) local v50=0 + 0 ;local v51;local v52;while true do if (v50==(2 -1)) then v51=v3(v16,v18,(v18 + v49) -(1414 -(447 + 966)) );v18=v18 + v49 ;v50=5 -3 ;end if (v50==(1820 -(1703 + 114))) then return v6(v52);end if (v50==(701 -(376 + 325))) then v51=nil;if  not v49 then v49=v23();if (v49==0) then return "";end end v50=1 -0 ;end if (v50==(1 + 1)) then v52={};for v114=2 -1 , #v51 do v52[v114]=v2(v1(v3(v51,v114,v114)));end v50=3;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v92,v93,v94,v95,v96,v97,v98,v99) local v92=(function() return 0 -0 ;end)();local v93=(function() return;end)();local v94=(function() return;end)();while true do if (v92== #"}") then if (v93== #".") then v94=(function() return v95()~=(0 -0) ;end)();elseif (v93==(7 -5)) then v94=(function() return v96();end)();elseif (v93== #"xxx") then v94=(function() return v97();end)();end v98[v99]=(function() return v94;end)();break;end if (v92==(867 -(550 + 317))) then local v121=(function() return 0;end)();local v122=(function() return;end)();while true do if (v121~=0) then else v122=(function() return 0 -0 ;end)();while true do if (v122==(1 -0)) then v92=(function() return  #"<";end)();break;end if (v122~=0) then else v93=(function() return v95();end)();v94=(function() return nil;end)();v122=(function() return 2 -1 ;end)();end end break;end end end end return v92,v93,v94,v95,v96,v97,v98,v99;end;end)();local v54=(function() return function(v100,v101,v102) local v103=(function() return 0;end)();local v104=(function() return;end)();while true do if (v103==(285 -(134 + 151))) then v104=(function() return 0;end)();while true do if (v104~=0) then else local v125=(function() return 1665 -(970 + 695) ;end)();while true do if (v125~=0) then else v100[v101-#"." ]=(function() return v102();end)();return v100,v101,v102;end end end end break;end end end;end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {v55,v56,nil,v57};end)();local v59=(function() return v23();end)();local v60=(function() return {};end)();for v68= #".",v59 do FlatIdent_44839,Type,Cons,v21,v24,v25,v60,v68=(function() return v53(FlatIdent_44839,Type,Cons,v21,v24,v25,v60,v68);end)();end v58[ #"gha"]=(function() return v21();end)();for v69= #"/",v23() do local v70=(function() return v21();end)();if (v20(v70, #"\\", #".")~=0) then else local v108=(function() return 1990 -(582 + 1408) ;end)();local v109=(function() return;end)();local v110=(function() return;end)();local v111=(function() return;end)();while true do if (v108~=(3 -2)) then else local v123=(function() return 0 -0 ;end)();while true do if ((3 -2)~=v123) then else v108=(function() return 1826 -(1195 + 629) ;end)();break;end if (0~=v123) then else v111=(function() return {v22(),v22(),nil,nil};end)();if (v109==0) then local v130=(function() return 0 -0 ;end)();local v131=(function() return;end)();while true do if (v130~=(241 -(187 + 54))) then else v131=(function() return 780 -(162 + 618) ;end)();while true do if (v131==0) then v111[ #"gha"]=(function() return v22();end)();v111[ #".com"]=(function() return v22();end)();break;end end break;end end elseif (v109== #">") then v111[ #"-19"]=(function() return v23();end)();elseif (v109==(2 + 0)) then v111[ #"xxx"]=(function() return v23() -(2^16) ;end)();elseif (v109== #"gha") then local v234=(function() return 0;end)();local v235=(function() return;end)();while true do if (v234~=(0 + 0)) then else v235=(function() return 0;end)();while true do if (v235~=0) then else v111[ #"gha"]=(function() return v23() -((3 -1)^16) ;end)();v111[ #"http"]=(function() return v22();end)();break;end end break;end end end v123=(function() return 1;end)();end end end if (3~=v108) then else if (v20(v110, #"19(", #"-19")== #",") then v111[ #"xnxx"]=(function() return v60[v111[ #"0313"]];end)();end v55[v69]=(function() return v111;end)();break;end if (v108~=(0 -0)) then else v109=(function() return v20(v70,2, #"91(");end)();v110=(function() return v20(v70, #"0313",1 + 5 );end)();v108=(function() return 1637 -(1373 + 263) ;end)();end if (v108~=(1002 -(451 + 549))) then else if (v20(v110, #"\\", #"/")~= #"|") then else v111[2]=(function() return v60[v111[2]];end)();end if (v20(v110,2,1 + 1 )== #"|") then v111[ #"91("]=(function() return v60[v111[ #"91("]];end)();end v108=(function() return 3;end)();end end end end for v71= #"]",v23() do v56,v71,v28=(function() return v54(v56,v71,v28);end)();end return v58;end local function v29(v62,v63,v64) local v65=v62[1 -0 ];local v66=v62[2 -0 ];local v67=v62[479 -(41 + 435) ];return function(...) local v72=v65;local v73=v66;local v74=v67;local v75=v27;local v76=1385 -(746 + 638) ;local v77= -(1 + 0);local v78={};local v79={...};local v80=v12("#",...) -(342 -(218 + 123)) ;local v81={};local v82={};for v105=1581 -(1535 + 46) ,v80 do if ((4352>=2554) and (v105>=v74)) then v78[v105-v74 ]=v79[v105 + (1575 -(1281 + 293)) + 0 ];else v82[v105]=v79[v105 + 1 + 0 ];end end local v83=(v80-v74) + (561 -(306 + (520 -(28 + 238)))) ;local v84;local v85;while true do v84=v72[v76];v85=v84[1 + 0 ];if (v85<=((93 -51) -20)) then if (v85<=(1477 -(899 + 568))) then if ((v85<=(271 -(176 + 91))) or (4406<4043)) then if (v85<=(2 -1)) then if (v85==((1559 -(1381 + 178)) + 0)) then v82[v84[4 -(2 + 0) ]][v84[606 -(268 + 335) ]]=v82[v84[294 -(60 + 230) ]];else for v157=v84[2],v84[575 -(426 + 146) ] do v82[v157]=nil;end end elseif (v85<=((5 + 1) -4)) then do return;end elseif (v85==3) then local v159=0 + 0 ;local v160;local v161;while true do if ((1456 -(282 + 1174))==v159) then v160=v84[5 -3 ];v161=v82[v84[5 -2 ]];v159=812 -(569 + 242) ;end if ((v159==(2 -1)) or (1889>=3383)) then v82[v160 + 1 + 0 ]=v161;v82[v160]=v161[v84[1028 -(706 + 318) ]];break;end end else local v162=1251 -(721 + 530) ;local v163;while true do if (v162==((524 + 703) -(322 + 905))) then v163=v84[613 -(602 + (30 -21)) ];v82[v163]=v82[v163](v82[v163 + (1190 -(233 + 216 + 740)) ]);break;end end end elseif (v85<=(1278 -(945 + (796 -(381 + 89))))) then if (v85<=(12 -(7 + 0))) then local v134=0;local v135;while true do if ((1892<=2734) and (v134==(0 + 0))) then v135=v84[702 -(271 + 291 + 138) ];v82[v135]=v82[v135](v13(v82,v135 + 1 + 0 ,v84[1503 -(1408 + 92) ]));break;end end elseif (v85>(1092 -(461 + 625))) then v82[v84[1290 -(993 + 295) ]]=v82[v84[1 + 2 ]][v84[1175 -(418 + 753) ]];else v82[v84[1 + 1 ]]={};end elseif ((1923<2218) and (v85<=(23 -15))) then if ((2173>379) and (v84[1 + 1 ]==v82[v84[2 + 2 ]])) then v76=v76 + (1 -0) ;else v76=v84[1 + 2 ];end elseif (v85==(538 -((1562 -(1074 + 82)) + 123))) then if (v82[v84[1771 -(1749 + 20) ]]==v84[1 + 3 ]) then v76=v76 + (1323 -(1249 + 73)) ;else v76=v84[686 -(483 + 200) ];end else v76=v84[2 + 1 ];end elseif (v85<=(1161 -(466 + 679))) then if (v85<=(30 -(36 -19))) then if (v85<=(14 -3)) then v82[v84[5 -3 ]]=v29(v73[v84[1903 -(106 + 1794) ]],nil,v64);elseif ((v85>(4 + (1792 -(214 + 1570)))) or (2591==3409)) then local v169=v84[1 + 1 ];v82[v169]=v82[v169](v82[v169 + (2 -1) ]);else v82[v84[5 -3 ]]=v29(v73[v84[(1572 -(990 + 465)) -(4 + 110) ]],nil,v64);end elseif (v85<=(598 -(57 + 527))) then v82[v84[2]]=v84[(590 + 840) -(41 + 1386) ];elseif (v85==(118 -(17 + 86))) then local v172=v84[2 + 0 ];v82[v172]=v82[v172](v13(v82,v172 + ((1 + 0) -0) ,v77));else local v174=0 -0 ;local v175;local v176;local v177;local v178;while true do if (v174==(1 + 1)) then for v248=v175,v77 do v178=v178 + (167 -(122 + 44)) ;v82[v248]=v176[v178];end break;end if ((4514>3324) and (v174==(0 -0))) then v175=v84[(6 + 0) -4 ];v176,v177=v75(v82[v175](v13(v82,v175 + 1 + (0 -0) ,v84[3 + (1726 -(1668 + 58)) ])));v174=1 + 0 ;end if ((v174==(1 + 0)) or (208>=4828)) then v77=(v177 + v175) -(1 -(626 -(512 + 114))) ;v178=0 + 0 ;v174=67 -(30 + 35) ;end end end elseif (v85<=(14 + 5)) then if (v85<=(1274 -(1043 + 214))) then local v139=v84[7 -5 ];v82[v139]=v82[v139]();elseif ((v85>((3206 -1976) -(323 + 889))) or (1583>3567)) then local v179=v84[5 -3 ];local v180,v181=v75(v82[v179](v13(v82,v179 + (581 -(361 + 219)) ,v84[323 -(53 + 267) ])));v77=(v181 + v179) -(1 + 0) ;local v182=413 -(15 + 398) ;for v217=v179,v77 do v182=v182 + (766 -(574 + 191)) ;v82[v217]=v180[v182];end else local v183=v84[984 -((36 -18) + 964) ];v82[v183]=v82[v183](v13(v82,v183 + (2 -1) ,v77));end elseif ((v85<=((38 -27) + 9)) or (1313==794)) then v82[v84[7 -5 ]]();elseif (v85>(13 + 8)) then for v220=v84[1 + 1 + 0 ],v84[853 -(20 + 830) ] do v82[v220]=nil;end else local v185=1790 -(573 + 1217) ;local v186;while true do if (v185==(0 + 0)) then v186=v84[128 -(22 + 94 + 10) ];v82[v186](v82[v186 + 1 + 0 ]);break;end end end elseif (v85<=(3 + 31)) then if (v85<=(766 -(542 + 196))) then if (v85<=(53 -28)) then if (v85<=23) then local v141=v84[1 + 1 ];local v142=v82[v84[3]];v82[v141 + 1 ]=v142;v82[v141]=v142[v84[1 + 3 ]];elseif (v85>(13 + 11)) then if (v84[1 + 1 ]==v82[v84[5 -1 ]]) then v76=v76 + (2 -1) ;else v76=v84[7 -(4 + 0) ];end else local v187=v84[1 + 1 ];local v188=v82[v187];local v189=v84[1554 -(1126 + 425) ];for v222=406 -(118 + (967 -680)) ,v189 do v188[v222]=v82[v187 + v222 ];end end elseif ((3174>2902) and (v85<=(101 -75))) then local v146=0 -0 ;local v147;while true do if (v146==(1121 -(118 + 1003))) then v147=v84[(1998 -(109 + 1885)) -2 ];v82[v147]=v82[v147](v13(v82,v147 + (286 -(175 + 110)) ,v84[8 -(1474 -(1269 + 200)) ]));break;end end elseif (v85>(404 -(142 + 235))) then v82[v84[9 -7 ]]=v82[v84[1 + 2 ]][v84[981 -(553 + 424) ]];else v76=v84[(5 -2) + (815 -(98 + 717)) ];end elseif (v85<=(58 -27)) then if (v85<=(26 + 3)) then v82[v84[2 + (826 -(802 + 24)) ]][v84[2 + 1 ]]=v84[2 + 2 ];elseif (v85>(18 + (20 -8))) then v82[v84[4 -2 ]]=v82[v84[7 -4 ]];else local v195=v84[4 -2 ];v82[v195](v82[v195 + 1 + (0 -0) ]);end elseif (v85<=(154 -(19 + 103))) then local v150=(579 + 174) -(239 + 514) ;local v151;while true do if ((4120<=4260) and (v150==0)) then v151=v84[1746 -(1344 + 400) ];v82[v151]=v82[v151]();break;end end elseif ((v85==(438 -(255 + 150))) or (883>4778)) then local v196=v84[1 + 1 ];v82[v196](v13(v82,v196 + (1330 -(797 + 532)) ,v84[3 + 0 ]));else v82[v84[1 + 1 ]]();end elseif ((v85<=(94 -54)) or (3620>=4891)) then if (v85<=(1239 -(373 + 829))) then if (v85<=(1774 -(404 + 1335))) then v82[v84[733 -(79 + 397 + 255) ]]=v82[v84[3]];elseif (v85>(1166 -(369 + 761))) then local v197=0 + 0 + 0 ;local v198;local v199;local v200;while true do if (v197==(0 + 0)) then v198=v84[2 -0 ];v199=v82[v198];v197=1 -0 ;end if (v197==(239 -(64 + 174))) then v200=v84[1 + 2 ];for v251=1 -0 ,v200 do v199[v251]=v82[v198 + v251 ];end break;end end else v82[v84[(940 -602) -(144 + 192) ]]=v64[v84[(730 -511) -(42 + 174) ]];end elseif (v85<=(29 + 9)) then if (v82[v84[2 + 0 ]]==v84[2 + 2 ]) then v76=v76 + (1494 -(711 + 782)) ;else v76=v84[3];end elseif ((4258>937) and (v85>(1543 -(363 + 1141)))) then local v204=v84[(566 + 1016) -(1183 + 397) ];local v205=v82[v204];for v229=v204 + 1 + 0 ,v84[8 -5 ] do v7(v205,v82[v229]);end else v82[v84[2 + 0 ]]=v64[v84[3 + 0 ]];end elseif (v85<=(2018 -(1913 + 62))) then if (v85<=(26 + 15)) then do return;end elseif ((v85==(2 + 40)) or (4869<906)) then local v208=v84[5 -3 ];v82[v208](v13(v82,v208 + ((788 + 1146) -(565 + 1129 + 239)) ,v84[2 + 1 ]));else v82[v84[7 -5 ]]=v84[1664 -(1477 + 184) ];end elseif (v85<=(44 + 0)) then v82[v84[9 -7 ]][v84[(3 + 0) -0 ]]=v84[4 + 0 ];elseif ((v85>(22 + 23)) or (1225>4228)) then v82[v84[4 -2 ]][v84[859 -(564 + 292) ]]=v82[v84[6 -2 ]];else v82[v84[5 -3 ]]={};end v76=v76 + (305 -(244 + 60)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
